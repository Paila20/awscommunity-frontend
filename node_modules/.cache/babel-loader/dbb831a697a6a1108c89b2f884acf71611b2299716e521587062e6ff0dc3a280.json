{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import BlogCard from './BlogCard';\n// const AllBlogs = () => {\n//     const [blogs, setBlogs] = useState([]);  // State to store blogs\n\n//     const navigate = useNavigate();\n\n//     // Function to fetch blogs\n//     const fetchBlogs = async () => {\n//         try {\n//             const response = await fetch('http://localhost:5000/api/blogs', {\n//                 headers: {\n//                     Authorization: localStorage.getItem('token'),  // Ensure user is authenticated\n//                 },\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch blogs');\n//             }\n\n//             const result = await response.json();\n\n//             // Check if the result is an array of blogs\n//             if (!Array.isArray(result)) {\n//                 throw new Error('Invalid response format: Expected an array of blogs');\n//             }\n\n//             setBlogs(result);  // Set blogs to the state\n//         } catch (err) {\n//             if (err.message === 'Unauthorized') {\n//                 localStorage.removeItem('token');\n//                 navigate('/login');  // Redirect to login if unauthorized\n//             }\n//         } \n//     };\n\n//     // Fetch blogs when the component mounts\n//     useEffect(() => {\n//         fetchBlogs();\n//     }, []);\n\n//     return (\n//         <div>\n//             <h1>All Blogs</h1>\n//             <div>\n//                 {blogs.length === 0 ? (\n//                     <p>No blogs found</p>\n//                 ) : (\n//                     blogs.map((blog) => (\n//                         <BlogCard key={blog._id}/>\n//                     ))\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default AllBlogs;","map":{"version":3,"names":[],"sources":["C:/Users/WIN-10/OneDrive/Documents/Desktop/expense-frontend/expensetracker/src/pages/AllBlogs.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import BlogCard from './BlogCard';\r\n// const AllBlogs = () => {\r\n//     const [blogs, setBlogs] = useState([]);  // State to store blogs\r\n    \r\n//     const navigate = useNavigate();\r\n\r\n//     // Function to fetch blogs\r\n//     const fetchBlogs = async () => {\r\n//         try {\r\n//             const response = await fetch('http://localhost:5000/api/blogs', {\r\n//                 headers: {\r\n//                     Authorization: localStorage.getItem('token'),  // Ensure user is authenticated\r\n//                 },\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error('Failed to fetch blogs');\r\n//             }\r\n\r\n//             const result = await response.json();\r\n\r\n//             // Check if the result is an array of blogs\r\n//             if (!Array.isArray(result)) {\r\n//                 throw new Error('Invalid response format: Expected an array of blogs');\r\n//             }\r\n\r\n//             setBlogs(result);  // Set blogs to the state\r\n//         } catch (err) {\r\n//             if (err.message === 'Unauthorized') {\r\n//                 localStorage.removeItem('token');\r\n//                 navigate('/login');  // Redirect to login if unauthorized\r\n//             }\r\n//         } \r\n//     };\r\n\r\n//     // Fetch blogs when the component mounts\r\n//     useEffect(() => {\r\n//         fetchBlogs();\r\n//     }, []);\r\n\r\n   \r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>All Blogs</h1>\r\n//             <div>\r\n//                 {blogs.length === 0 ? (\r\n//                     <p>No blogs found</p>\r\n//                 ) : (\r\n//                     blogs.map((blog) => (\r\n//                         <BlogCard key={blog._id}/>\r\n//                     ))\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AllBlogs;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}