{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WIN-10\\\\OneDrive\\\\Documents\\\\Desktop\\\\expense-frontend\\\\expensetracker\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import { Link, useNavigate } from 'react-router-dom'\n// import { ToastContainer } from 'react-toastify';\n// import { handleError, handleSuccess } from '../utils';\n\n// function Signup() {\n\n//     const [signupInfo, setSignupInfo] = useState({\n//         name: '',\n//         email: '',\n//         password: ''\n//     })\n\n//     const navigate = useNavigate();\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         console.log(name, value);\n//         const copySignupInfo = { ...signupInfo };\n//         copySignupInfo[name] = value;\n//         setSignupInfo(copySignupInfo);\n//     }\n\n//     const handleSignup = async (e) => {\n//         e.preventDefault();\n//         const { name, email, password } = signupInfo;\n//         if (!name || !email || !password) {\n//             return handleError('name, email and password are required')\n//         }\n//         try {\n//             const url = `http://localhost:5000/auth/signup`;\n//             const response = await fetch(url, {\n//                 method: \"POST\",\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify(signupInfo)\n//             });\n//             const result = await response.json();\n//             const { success, message, error } = result;\n//             if (success) {\n//                 handleSuccess(message);\n//                 setTimeout(() => {\n//                     navigate('/login')\n//                 }, 1000)\n//             } else if (error) {\n//                 const details = error?.details[0].message;\n//                 handleError(details);\n//             } else if (!success) {\n//                 handleError(message);\n//             }\n//             console.log(result);\n//         } catch (err) {\n//             handleError(err);\n//         }\n//     }\n//     return (\n//         <div className='auth-container d-flex flex-column align-items-center justify-content-center mt-5 pb-5'>\n//             <h1>Signup</h1>\n//             <form onSubmit={handleSignup}>\n//                 <div>\n//                     <label htmlFor='name'>Name</label>\n//                     <input\n//                         onChange={handleChange}\n//                         type='text'\n//                         name='name'\n//                         autoFocus\n//                         placeholder='Enter your name...'\n//                         value={signupInfo.name}\n//                     />\n//                 </div>\n//                 <div>\n//                     <label htmlFor='email'>Email</label>\n//                     <input\n//                         onChange={handleChange}\n//                         type='email'\n//                         name='email'\n//                         placeholder='Enter your email...'\n//                         value={signupInfo.email}\n//                     />\n//                 </div>\n//                 <div>\n//                     <label htmlFor='password'>Password</label>\n//                     <input\n//                         onChange={handleChange}\n//                         type='password'\n//                         name='password'\n//                         placeholder='Enter your password...'\n//                         value={signupInfo.password}\n//                     />\n//                 </div>\n//                 <button type='submit'>Signup</button>\n//                 <span>Already have an account ?\n//                     <Link to=\"/login\">Login</Link>\n//                 </span>\n//             </form>\n//             <ToastContainer />\n//         </div>\n//     )\n// }\n\n// export default Signup\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { handleError, handleSuccess } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [signupInfo, setSignupInfo] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignupInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const validateForm = () => {\n    let formErrors = {};\n    let isValid = true;\n\n    // Validate Name\n    if (!signupInfo.name) {\n      formErrors.name = \"Name is required\";\n      isValid = false;\n    }\n\n    // Validate Email\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!signupInfo.email) {\n      formErrors.email = \"Email is required\";\n      isValid = false;\n    } else if (!emailPattern.test(signupInfo.email)) {\n      formErrors.email = \"Please enter a valid email address\";\n      isValid = false;\n    }\n\n    // Validate Password\n    const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[A-Za-z0-9!@#$%^&*]{8,}$/;\n    if (!signupInfo.password) {\n      formErrors.password = \"Password is required\";\n      isValid = false;\n    } else if (!passwordPattern.test(signupInfo.password)) {\n      formErrors.password = \"Password must be at least 8 characters, contain one letter, one number, and one special character\";\n      isValid = false;\n    }\n    setErrors(formErrors);\n    return isValid;\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n\n    // Validate form before submitting\n    if (!validateForm()) {\n      return;\n    }\n    const {\n      name,\n      email,\n      password\n    } = signupInfo;\n    try {\n      const url = `http://localhost:5000/auth/signup`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(signupInfo)\n      });\n      const result = await response.json();\n      const {\n        success,\n        message,\n        error\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        setTimeout(() => {\n          navigate('/login');\n        }, 1000);\n      } else if (error) {\n        const details = error === null || error === void 0 ? void 0 : error.details[0].message;\n        handleError(details);\n      } else if (!success) {\n        handleError(message);\n      }\n    } catch (err) {\n      handleError(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container d-flex flex-column align-items-center justify-content-center mt-5 pb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignup,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"text\",\n          name: \"name\",\n          autoFocus: true,\n          placeholder: \"Enter your name...\",\n          value: signupInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your email...\",\n          value: signupInfo.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter your password...\",\n          value: signupInfo.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"2KKmR3uEwVeI4a7w9iMr1gdvkno=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","handleError","handleSuccess","jsxDEV","_jsxDEV","Signup","_s","signupInfo","setSignupInfo","name","email","password","errors","setErrors","navigate","handleChange","e","value","target","prevInfo","validateForm","formErrors","isValid","emailPattern","test","passwordPattern","handleSignup","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","error","setTimeout","details","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","type","autoFocus","placeholder","to","_c","$RefreshReg$"],"sources":["C:/Users/WIN-10/OneDrive/Documents/Desktop/expense-frontend/expensetracker/src/pages/Signup.js"],"sourcesContent":["// import React, { useState } from 'react'\r\n// import { Link, useNavigate } from 'react-router-dom'\r\n// import { ToastContainer } from 'react-toastify';\r\n// import { handleError, handleSuccess } from '../utils';\r\n\r\n// function Signup() {\r\n\r\n//     const [signupInfo, setSignupInfo] = useState({\r\n//         name: '',\r\n//         email: '',\r\n//         password: ''\r\n//     })\r\n\r\n//     const navigate = useNavigate();\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         console.log(name, value);\r\n//         const copySignupInfo = { ...signupInfo };\r\n//         copySignupInfo[name] = value;\r\n//         setSignupInfo(copySignupInfo);\r\n//     }\r\n\r\n//     const handleSignup = async (e) => {\r\n//         e.preventDefault();\r\n//         const { name, email, password } = signupInfo;\r\n//         if (!name || !email || !password) {\r\n//             return handleError('name, email and password are required')\r\n//         }\r\n//         try {\r\n//             const url = `http://localhost:5000/auth/signup`;\r\n//             const response = await fetch(url, {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify(signupInfo)\r\n//             });\r\n//             const result = await response.json();\r\n//             const { success, message, error } = result;\r\n//             if (success) {\r\n//                 handleSuccess(message);\r\n//                 setTimeout(() => {\r\n//                     navigate('/login')\r\n//                 }, 1000)\r\n//             } else if (error) {\r\n//                 const details = error?.details[0].message;\r\n//                 handleError(details);\r\n//             } else if (!success) {\r\n//                 handleError(message);\r\n//             }\r\n//             console.log(result);\r\n//         } catch (err) {\r\n//             handleError(err);\r\n//         }\r\n//     }\r\n//     return (\r\n//         <div className='auth-container d-flex flex-column align-items-center justify-content-center mt-5 pb-5'>\r\n//             <h1>Signup</h1>\r\n//             <form onSubmit={handleSignup}>\r\n//                 <div>\r\n//                     <label htmlFor='name'>Name</label>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type='text'\r\n//                         name='name'\r\n//                         autoFocus\r\n//                         placeholder='Enter your name...'\r\n//                         value={signupInfo.name}\r\n//                     />\r\n//                 </div>\r\n//                 <div>\r\n//                     <label htmlFor='email'>Email</label>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type='email'\r\n//                         name='email'\r\n//                         placeholder='Enter your email...'\r\n//                         value={signupInfo.email}\r\n//                     />\r\n//                 </div>\r\n//                 <div>\r\n//                     <label htmlFor='password'>Password</label>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type='password'\r\n//                         name='password'\r\n//                         placeholder='Enter your password...'\r\n//                         value={signupInfo.password}\r\n//                     />\r\n//                 </div>\r\n//                 <button type='submit'>Signup</button>\r\n//                 <span>Already have an account ?\r\n//                     <Link to=\"/login\">Login</Link>\r\n//                 </span>\r\n//             </form>\r\n//             <ToastContainer />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Signup\r\n\r\nimport React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { handleError, handleSuccess } from '../utils';\r\n\r\nfunction Signup() {\r\n\r\n    const [signupInfo, setSignupInfo] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setSignupInfo((prevInfo) => ({ ...prevInfo, [name]: value }));\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let formErrors = {};\r\n        let isValid = true;\r\n\r\n        // Validate Name\r\n        if (!signupInfo.name) {\r\n            formErrors.name = \"Name is required\";\r\n            isValid = false;\r\n        }\r\n\r\n        // Validate Email\r\n        const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        if (!signupInfo.email) {\r\n            formErrors.email = \"Email is required\";\r\n            isValid = false;\r\n        } else if (!emailPattern.test(signupInfo.email)) {\r\n            formErrors.email = \"Please enter a valid email address\";\r\n            isValid = false;\r\n        }\r\n\r\n        // Validate Password\r\n        const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[A-Za-z0-9!@#$%^&*]{8,}$/;\r\n        if (!signupInfo.password) {\r\n            formErrors.password = \"Password is required\";\r\n            isValid = false;\r\n        } else if (!passwordPattern.test(signupInfo.password)) {\r\n            formErrors.password = \"Password must be at least 8 characters, contain one letter, one number, and one special character\";\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(formErrors);\r\n        return isValid;\r\n    }\r\n\r\n    const handleSignup = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Validate form before submitting\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        const { name, email, password } = signupInfo;\r\n        try {\r\n            const url = `http://localhost:5000/auth/signup`;\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(signupInfo)\r\n            });\r\n            const result = await response.json();\r\n            const { success, message, error } = result;\r\n            if (success) {\r\n                handleSuccess(message);\r\n                setTimeout(() => {\r\n                    navigate('/login');\r\n                }, 1000);\r\n            } else if (error) {\r\n                const details = error?.details[0].message;\r\n                handleError(details);\r\n            } else if (!success) {\r\n                handleError(message);\r\n            }\r\n        } catch (err) {\r\n            handleError(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='auth-container d-flex flex-column align-items-center justify-content-center mt-5 pb-5'>\r\n            <h1>Signup</h1>\r\n            <form onSubmit={handleSignup}>\r\n                <div>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        type='text'\r\n                        name='name'\r\n                        autoFocus\r\n                        placeholder='Enter your name...'\r\n                        value={signupInfo.name}\r\n                    />\r\n                    {errors.name && <div className=\"error\">{errors.name}</div>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        type='email'\r\n                        name='email'\r\n                        placeholder='Enter your email...'\r\n                        value={signupInfo.email}\r\n                    />\r\n                    {errors.email && <div className=\"error\">{errors.email}</div>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        type='password'\r\n                        name='password'\r\n                        placeholder='Enter your password...'\r\n                        value={signupInfo.password}\r\n                    />\r\n                    {errors.password && <div className=\"error\">{errors.password}</div>}\r\n                </div>\r\n                <button type='submit'>Signup</button>\r\n                <span>Already have an account? <Link to=\"/login\">Login</Link></span>\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}