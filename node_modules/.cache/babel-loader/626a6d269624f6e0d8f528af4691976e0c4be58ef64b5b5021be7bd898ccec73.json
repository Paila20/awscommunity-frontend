{"ast":null,"code":"\n\n// import React, { useEffect, useState } from 'react';\n\n// import { ToastContainer } from 'react-toastify';\n// import BlogForm from './BlogForm';\n// import { BlogCard} from './BlogCard';\n// import Navbar from './Navbar';\n// import { useNavigate } from \"react-router-dom\";\n// import { handleSuccess, handleError } from '../utils';\n\n// function Home() {\n//     const [loggedInUser, setLoggedInUser] = useState('');\n//     const [blogs, setBlogs] = useState([]);\n//     const [showBlogForm, setShowBlogForm] = useState(false);\n//     const [editingBlog, setEditingBlog] = useState(null);\n//     // const navigate = useNavigate();\n//     const user =localStorage.getItem('loggedInUser')\n\n//     useEffect(() => {\n//         setLoggedInUser(localStorage.getItem('loggedInUser'));\n//         fetchBlogs();\n//     }, []);\n\n//     const navigate = useNavigate();\n\n//     const fetchBlogs = async () => {\n//         try {\n//             const response = await fetch(`https://backend-blogs-s8uc.onrender.com/api/blogs`, {\n//                 headers: { Authorization: localStorage.getItem('token') },\n//             });\n//             const result = await response.json();\n//             console.log(result);\n\n//             // Since the API directly returns an array, set it directly to blogs\n//             if (!Array.isArray(result)) {\n//                 throw new Error('Invalid response format: Expected an array of blogs');\n//             }\n\n//             setBlogs(result);\n//         } catch (err) {\n//             if (err.message === 'Unauthorized') {\n//                 localStorage.removeItem('token');\n//                 navigate('/login');\n//             } else {\n//                 handleError(err.message);\n//             }\n//         }\n//     };\n\n//     const addOrUpdateBlog = async (formData) => {\n//         try {\n//             const url = editingBlog\n//                 ? `https://backend-blogs-s8uc.onrender.com/api/blogs/${editingBlog._id}`\n//                 : `https://backend-blogs-s8uc.onrender.com/api/blogs/create`;\n//             const method = editingBlog ? 'PUT' : 'POST';\n\n//             const response = await fetch(url, {\n//                 method,\n//                 headers: {\n//                     Authorization: localStorage.getItem('token'),\n//                 },\n//                 body: formData,\n//             });\n\n//             const result = await response.json();\n//             console.log(result);\n\n//             // if (!Array.isArray(result)) {\n//             //     throw new Error('Invalid response format: Expected an array of blogs');\n//             // }\n\n//             handleSuccess(editingBlog ? 'Blog updated successfully!' : 'Blog created successfully!');\n//             // setBlogs(result);\n//             fetchBlogs(); \n//             // Reset form state\n//             setShowBlogForm(false);\n//             setEditingBlog(null);\n//         } catch (err) {\n//             handleError(err.message);\n//         }\n//     };\n\n//     const deleteBlog = async (id) => {\n//         try {\n//             const response = await fetch(`https://backend-blogs-s8uc.onrender.com/api/blogs/${id}`, {\n//                 method: 'DELETE',\n//                 headers: { Authorization: localStorage.getItem('token') },\n//             });\n\n//             const result = await response.json();\n//             console.log(result);\n//             if (response.ok) {\n//                 handleSuccess('Blog deleted successfully!');\n//                 fetchBlogs();  // Call fetchBlogs to reload the blog list\n//             } else {\n//                 throw new Error('Failed to delete blog');\n//             }\n\n//         } catch (err) {\n//             handleError(err.message);\n//         }\n//     };\n\n//     return (\n\n//     <>\n//     {/* Bootstrap Navbar */}\n//     {/* <Navbar  setShowBlogForm={setShowBlogForm}/> */}\n//     {setShowBlogForm && <Navbar setShowBlogForm={setShowBlogForm} />}\n\n//     <div className=\"container mt-5 pt-5\">\n//         <div className=\"row px-sm-5 px-0 justify-content-center \" >\n//             {blogs.map((blog) => (\n//                 <div key={blog._id} className=\"col-lg-4 col-md-6 col-12 mb-4 d-flex justify-content-center\">\n//                     <BlogCard\n//                         blog={blog}\n//                         onEdit={() => {\n//                             setEditingBlog(blog);\n//                             setShowBlogForm(true);\n//                         }}\n//                         onDelete={() => deleteBlog(blog._id)}\n//                         user={user}\n//                     />\n//                 </div>\n//             ))}\n//         </div>\n//     </div>\n\n//     {showBlogForm && (\n//         <BlogForm\n//             onClose={() => {\n//                 setShowBlogForm(false);\n//                 setEditingBlog(null);\n//             }}\n//             onSubmit={addOrUpdateBlog}\n//             blog={editingBlog}\n//         />\n//     )}\n//     <ToastContainer />\n// </>\n//     );\n// }\n\n// export default Home;","map":{"version":3,"names":[],"sources":["C:/Users/WIN-10/OneDrive/Documents/Desktop/expense-frontend/expensetracker/src/pages/Home.js"],"sourcesContent":["\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// import { ToastContainer } from 'react-toastify';\r\n// import BlogForm from './BlogForm';\r\n// import { BlogCard} from './BlogCard';\r\n// import Navbar from './Navbar';\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { handleSuccess, handleError } from '../utils';\r\n\r\n// function Home() {\r\n//     const [loggedInUser, setLoggedInUser] = useState('');\r\n//     const [blogs, setBlogs] = useState([]);\r\n//     const [showBlogForm, setShowBlogForm] = useState(false);\r\n//     const [editingBlog, setEditingBlog] = useState(null);\r\n//     // const navigate = useNavigate();\r\n//     const user =localStorage.getItem('loggedInUser')\r\n\r\n//     useEffect(() => {\r\n//         setLoggedInUser(localStorage.getItem('loggedInUser'));\r\n//         fetchBlogs();\r\n//     }, []);\r\n\r\n//     const navigate = useNavigate();\r\n\r\n  \r\n//     const fetchBlogs = async () => {\r\n//         try {\r\n//             const response = await fetch(`https://backend-blogs-s8uc.onrender.com/api/blogs`, {\r\n//                 headers: { Authorization: localStorage.getItem('token') },\r\n//             });\r\n//             const result = await response.json();\r\n//             console.log(result);\r\n    \r\n//             // Since the API directly returns an array, set it directly to blogs\r\n//             if (!Array.isArray(result)) {\r\n//                 throw new Error('Invalid response format: Expected an array of blogs');\r\n//             }\r\n    \r\n//             setBlogs(result);\r\n//         } catch (err) {\r\n//             if (err.message === 'Unauthorized') {\r\n//                 localStorage.removeItem('token');\r\n//                 navigate('/login');\r\n//             } else {\r\n//                 handleError(err.message);\r\n//             }\r\n//         }\r\n//     };\r\n    \r\n//     const addOrUpdateBlog = async (formData) => {\r\n//         try {\r\n//             const url = editingBlog\r\n//                 ? `https://backend-blogs-s8uc.onrender.com/api/blogs/${editingBlog._id}`\r\n//                 : `https://backend-blogs-s8uc.onrender.com/api/blogs/create`;\r\n//             const method = editingBlog ? 'PUT' : 'POST';\r\n    \r\n//             const response = await fetch(url, {\r\n//                 method,\r\n//                 headers: {\r\n//                     Authorization: localStorage.getItem('token'),\r\n//                 },\r\n//                 body: formData,\r\n//             });\r\n    \r\n//             const result = await response.json();\r\n//             console.log(result);\r\n    \r\n           \r\n//             // if (!Array.isArray(result)) {\r\n//             //     throw new Error('Invalid response format: Expected an array of blogs');\r\n//             // }\r\n    \r\n//             handleSuccess(editingBlog ? 'Blog updated successfully!' : 'Blog created successfully!');\r\n//             // setBlogs(result);\r\n//             fetchBlogs(); \r\n//             // Reset form state\r\n//             setShowBlogForm(false);\r\n//             setEditingBlog(null);\r\n//         } catch (err) {\r\n//             handleError(err.message);\r\n//         }\r\n//     };\r\n    \r\n//     const deleteBlog = async (id) => {\r\n//         try {\r\n//             const response = await fetch(`https://backend-blogs-s8uc.onrender.com/api/blogs/${id}`, {\r\n//                 method: 'DELETE',\r\n//                 headers: { Authorization: localStorage.getItem('token') },\r\n//             });\r\n    \r\n//             const result = await response.json();\r\n//             console.log(result);\r\n//             if (response.ok) {\r\n//                 handleSuccess('Blog deleted successfully!');\r\n//                 fetchBlogs();  // Call fetchBlogs to reload the blog list\r\n//             } else {\r\n//                 throw new Error('Failed to delete blog');\r\n//             }\r\n           \r\n//         } catch (err) {\r\n//             handleError(err.message);\r\n//         }\r\n//     };\r\n    \r\n   \r\n//     return (\r\n       \r\n//     <>\r\n//     {/* Bootstrap Navbar */}\r\n//     {/* <Navbar  setShowBlogForm={setShowBlogForm}/> */}\r\n//     {setShowBlogForm && <Navbar setShowBlogForm={setShowBlogForm} />}\r\n   \r\n//     <div className=\"container mt-5 pt-5\">\r\n//         <div className=\"row px-sm-5 px-0 justify-content-center \" >\r\n//             {blogs.map((blog) => (\r\n//                 <div key={blog._id} className=\"col-lg-4 col-md-6 col-12 mb-4 d-flex justify-content-center\">\r\n//                     <BlogCard\r\n//                         blog={blog}\r\n//                         onEdit={() => {\r\n//                             setEditingBlog(blog);\r\n//                             setShowBlogForm(true);\r\n//                         }}\r\n//                         onDelete={() => deleteBlog(blog._id)}\r\n//                         user={user}\r\n//                     />\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     </div>\r\n\r\n//     {showBlogForm && (\r\n//         <BlogForm\r\n//             onClose={() => {\r\n//                 setShowBlogForm(false);\r\n//                 setEditingBlog(null);\r\n//             }}\r\n//             onSubmit={addOrUpdateBlog}\r\n//             blog={editingBlog}\r\n//         />\r\n//     )}\r\n//     <ToastContainer />\r\n// </>\r\n//     );\r\n// }\r\n\r\n// export default Home;\r\n\r\n"],"mappings":";;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}