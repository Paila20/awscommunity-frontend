{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WIN-10\\\\OneDrive\\\\Documents\\\\Desktop\\\\expense-frontend\\\\expensetracker\\\\src\\\\context\\\\BlogContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { handleSuccess, handleError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogContext = /*#__PURE__*/createContext();\nexport const useBlog = () => {\n  _s();\n  return useContext(BlogContext);\n};\n_s(useBlog, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const BlogProvider = ({\n  children\n}) => {\n  _s2();\n  const [showBlogForm, setShowBlogForm] = useState(false);\n  const [editingBlog, setEditingBlog] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  const fetchBlogs = async () => {\n    try {\n      const response = await fetch(`https://backend-blogs-s8uc.onrender.com/api/blogs`, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      const result = await response.json();\n      if (!Array.isArray(result)) {\n        throw new Error('Invalid response format: Expected an array of blogs');\n      }\n      setBlogs(result);\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n  const fetchAllBlogs = async () => {\n    try {\n      const response = await fetch('https://backend-blogs-s8uc.onrender.com/api/blogs/all', {\n        headers: {\n          Authorization: localStorage.getItem('token') // Ensure user is authenticated\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          throw new Error('Unauthorized');\n        }\n        throw new Error('Failed to fetch blogs');\n      }\n      const result = await response.json();\n      if (!Array.isArray(result)) {\n        throw new Error('Invalid response format: Expected an array of blogs');\n      }\n      setBlogs(result); // Set blogs to the state\n    } catch (err) {\n      handleError(err.message);\n      // if (err.message === 'Unauthorized') {\n      //     localStorage.removeItem('token');\n      //     navigate('/login'); // Redirect to login if unauthorized\n      // } else {\n      //     setError(err.message);\n      // }\n    }\n  };\n  const addOrUpdateBlog = async formData => {\n    try {\n      const url = editingBlog ? `https://backend-blogs-s8uc.onrender.com/api/blogs/${editingBlog._id}` : `https://backend-blogs-s8uc.onrender.com/api/blogs/create`;\n      const method = editingBlog ? 'PUT' : 'POST';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          Authorization: localStorage.getItem('token')\n        },\n        body: formData\n      });\n      const result = await response.json();\n      handleSuccess(editingBlog ? 'Blog updated successfully!' : 'Blog created successfully!');\n      fetchBlogs(); // Refresh the blog list\n      setShowBlogForm(false);\n      setEditingBlog(null);\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n  const deleteBlog = async id => {\n    try {\n      const response = await fetch(`https://backend-blogs-s8uc.onrender.com/api/blogs/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      if (response.ok) {\n        handleSuccess('Blog deleted successfully!');\n        fetchBlogs();\n      } else {\n        throw new Error('Failed to delete blog');\n      }\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BlogContext.Provider, {\n    value: {\n      blogs,\n      showBlogForm,\n      setShowBlogForm,\n      editingBlog,\n      setEditingBlog,\n      fetchBlogs,\n      addOrUpdateBlog,\n      deleteBlog,\n      fetchAllBlogs\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s2(BlogProvider, \"2iV0tvBDdSleCTNIATHbrHznN/s=\");\n_c = BlogProvider;\nvar _c;\n$RefreshReg$(_c, \"BlogProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","handleSuccess","handleError","jsxDEV","_jsxDEV","BlogContext","useBlog","_s","BlogProvider","children","_s2","showBlogForm","setShowBlogForm","editingBlog","setEditingBlog","blogs","setBlogs","fetchBlogs","response","fetch","headers","Authorization","localStorage","getItem","result","json","Array","isArray","Error","err","message","fetchAllBlogs","ok","status","addOrUpdateBlog","formData","url","_id","method","body","deleteBlog","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/WIN-10/OneDrive/Documents/Desktop/expense-frontend/expensetracker/src/context/BlogContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { handleSuccess, handleError } from '../utils';\r\n\r\nconst BlogContext = createContext();\r\n\r\nexport const useBlog = () => {\r\n    return useContext(BlogContext);\r\n};\r\n\r\nexport const BlogProvider = ({ children }) => {\r\n    const [showBlogForm, setShowBlogForm] = useState(false);\r\n    const [editingBlog, setEditingBlog] = useState(null);\r\n    const [blogs, setBlogs] = useState([]);\r\n\r\n    const fetchBlogs = async () => {\r\n        try {\r\n            const response = await fetch(`https://backend-blogs-s8uc.onrender.com/api/blogs`, {\r\n                headers: { Authorization: localStorage.getItem('token') },\r\n            });\r\n            const result = await response.json();\r\n\r\n            if (!Array.isArray(result)) {\r\n                throw new Error('Invalid response format: Expected an array of blogs');\r\n            }\r\n\r\n            setBlogs(result);\r\n        } catch (err) {\r\n            handleError(err.message);\r\n        }\r\n    };\r\n    const fetchAllBlogs = async () => {\r\n        try {\r\n            const response = await fetch('https://backend-blogs-s8uc.onrender.com/api/blogs/all', {\r\n                headers: {\r\n                    Authorization: localStorage.getItem('token'), // Ensure user is authenticated\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                if (response.status === 401) {\r\n                    throw new Error('Unauthorized');\r\n                }\r\n                throw new Error('Failed to fetch blogs');\r\n            }\r\n\r\n            const result = await response.json();\r\n            if (!Array.isArray(result)) {\r\n                throw new Error('Invalid response format: Expected an array of blogs');\r\n            }\r\n\r\n            setBlogs(result); // Set blogs to the state\r\n        } catch (err) {\r\n            handleError(err.message);\r\n            // if (err.message === 'Unauthorized') {\r\n            //     localStorage.removeItem('token');\r\n            //     navigate('/login'); // Redirect to login if unauthorized\r\n            // } else {\r\n            //     setError(err.message);\r\n            // }\r\n        }\r\n    };\r\n\r\n\r\n    const addOrUpdateBlog = async (formData) => {\r\n        try {\r\n            const url = editingBlog\r\n                ? `https://backend-blogs-s8uc.onrender.com/api/blogs/${editingBlog._id}`\r\n                : `https://backend-blogs-s8uc.onrender.com/api/blogs/create`;\r\n            const method = editingBlog ? 'PUT' : 'POST';\r\n\r\n            const response = await fetch(url, {\r\n                method,\r\n                headers: {\r\n                    Authorization: localStorage.getItem('token'),\r\n                },\r\n                body: formData,\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            handleSuccess(editingBlog ? 'Blog updated successfully!' : 'Blog created successfully!');\r\n            fetchBlogs(); // Refresh the blog list\r\n            setShowBlogForm(false);\r\n            setEditingBlog(null);\r\n        } catch (err) {\r\n            handleError(err.message);\r\n        }\r\n    };\r\n\r\n    const deleteBlog = async (id) => {\r\n        try {\r\n            const response = await fetch(`https://backend-blogs-s8uc.onrender.com/api/blogs/${id}`, {\r\n                method: 'DELETE',\r\n                headers: { Authorization: localStorage.getItem('token') },\r\n            });\r\n\r\n            if (response.ok) {\r\n                handleSuccess('Blog deleted successfully!');\r\n                fetchBlogs();\r\n            } else {\r\n                throw new Error('Failed to delete blog');\r\n            }\r\n        } catch (err) {\r\n            handleError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <BlogContext.Provider\r\n            value={{\r\n                blogs,\r\n                showBlogForm,\r\n                setShowBlogForm,\r\n                editingBlog,\r\n                setEditingBlog,\r\n                fetchBlogs,\r\n                addOrUpdateBlog,\r\n                deleteBlog,\r\n                fetchAllBlogs\r\n            }}\r\n        >\r\n            {children}\r\n        </BlogContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}