{"ast":null,"code":"import { toast } from 'react-toastify';\nexport const handleSuccess = msg => {\n  toast.success(msg, {\n    position: 'top-right'\n  });\n};\nexport const handleError = msg => {\n  toast.error(msg, {\n    position: 'top-right'\n  });\n};\nexport const timeStampConversionToDateAndTime = timestamp => {\n  if (timestamp) {\n    const now = new Date();\n    const date = new Date(timestamp);\n    const diff = now - date;\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    if (weeks > 0) {\n      return `${weeks} week${weeks > 1 ? 's' : ''} ago`;\n    } else if (days > 0) {\n      return `${days} day${days > 1 ? 's' : ''} ago`;\n    } else if (hours > 0) {\n      return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n    } else if (minutes > 0) {\n      return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n    } else {\n      return 'Just now';\n    }\n  } else {\n    return '';\n  }\n};\nexport const formatTimestamp = timestamp => {\n  const date = new Date(timestamp);\n  const options = {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit'\n  };\n  return date.toLocaleDateString('en-US', options);\n};","map":{"version":3,"names":["toast","handleSuccess","msg","success","position","handleError","error","timeStampConversionToDateAndTime","timestamp","now","Date","date","diff","seconds","Math","floor","minutes","hours","days","weeks","formatTimestamp","options","year","month","day","toLocaleDateString"],"sources":["C:/Users/WIN-10/OneDrive/Documents/Desktop/expense-frontend/expensetracker/src/utils.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\n\r\nexport const handleSuccess = (msg) => {\r\n    toast.success(msg, {\r\n        position: 'top-right'\r\n    })\r\n}\r\n\r\nexport const handleError = (msg) => {\r\n    toast.error(msg, {\r\n        position: 'top-right'\r\n    })\r\n}\r\n\r\nexport const timeStampConversionToDateAndTime = (timestamp) => {\r\n    if (timestamp) {\r\n      const now = new Date();\r\n      const date = new Date(timestamp);\r\n      const diff = now - date;\r\n      const seconds = Math.floor(diff / 1000);\r\n      const minutes = Math.floor(seconds / 60);\r\n      const hours = Math.floor(minutes / 60);\r\n      const days = Math.floor(hours / 24);\r\n      const weeks = Math.floor(days / 7);\r\n  \r\n      if (weeks > 0) {\r\n        return `${weeks} week${weeks > 1 ? 's' : ''} ago`;\r\n      } else if (days > 0) { \r\n        return `${days} day${days > 1 ? 's' : ''} ago`;\r\n      } else if (hours > 0) {\r\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n      } else if (minutes > 0) {\r\n        return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\r\n      } else {\r\n        return 'Just now';\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n  \r\n  export const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const options = { year: 'numeric', month: 'short', day: '2-digit' };\r\n    return date.toLocaleDateString('en-US', options);\r\n  };"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAClCF,KAAK,CAACG,OAAO,CAACD,GAAG,EAAE;IACfE,QAAQ,EAAE;EACd,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIH,GAAG,IAAK;EAChCF,KAAK,CAACM,KAAK,CAACJ,GAAG,EAAE;IACbE,QAAQ,EAAE;EACd,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,gCAAgC,GAAIC,SAAS,IAAK;EAC3D,IAAIA,SAAS,EAAE;IACb,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAG,IAAID,IAAI,CAACF,SAAS,CAAC;IAChC,MAAMI,IAAI,GAAGH,GAAG,GAAGE,IAAI;IACvB,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,IAAI,CAAC;IACvC,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC;IACtC,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,EAAE,CAAC;IACnC,MAAME,KAAK,GAAGL,IAAI,CAACC,KAAK,CAACG,IAAI,GAAG,CAAC,CAAC;IAElC,IAAIC,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,GAAGA,KAAK,QAAQA,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;IACnD,CAAC,MAAM,IAAID,IAAI,GAAG,CAAC,EAAE;MACnB,OAAO,GAAGA,IAAI,OAAOA,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;IAChD,CAAC,MAAM,IAAID,KAAK,GAAG,CAAC,EAAE;MACpB,OAAO,GAAGA,KAAK,QAAQA,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;IACnD,CAAC,MAAM,IAAID,OAAO,GAAG,CAAC,EAAE;MACtB,OAAO,GAAGA,OAAO,UAAUA,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;IACzD,CAAC,MAAM;MACL,OAAO,UAAU;IACnB;EACF,CAAC,MAAM;IACL,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMI,eAAe,GAAIZ,SAAS,IAAK;EAC5C,MAAMG,IAAI,GAAG,IAAID,IAAI,CAACF,SAAS,CAAC;EAChC,MAAMa,OAAO,GAAG;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAU,CAAC;EACnE,OAAOb,IAAI,CAACc,kBAAkB,CAAC,OAAO,EAAEJ,OAAO,CAAC;AAClD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}